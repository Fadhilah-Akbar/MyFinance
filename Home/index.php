<?php 
$page = "Dashboard";
include 'header.php'; 
include 'sidebar.php'; 
?>

<!-- Main Content -->
<div id="content">
  <?php include 'topbar.php' ?>

  <!-- Dashboard Content -->
  <div class="container mt-4">
    <!-- Card for Welcome Section -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <h2>My Dashboard</h2>
            <p>Easily track your income and expenses, evaluate your finances, and review your financial history.</p>
        </div>
    </div>

    <!-- Card for Income Chart -->
    <div class="row">
    <!-- Begin of chart section -->
    <div class="col-sm-6">
      <div class="card shadow my-4">
        <div class="card-body">
          <div class="d-flex justify-content-center">
            <h4>Cash Flow Chart</h4>
          </div>
          <div class="card p-3">
            <div class="d-flex justify-content">
              <div class="card p-2 mt-3">
                <select id="chartFilter" class="form-select" onchange="updateChartData()">
                  <option value="daily">Daily</option>
                  <option value="monthly">Monthly</option>
                  <option value="yearly">Yearly</option>
                </select>
              </div>
            </div>
            <canvas id="charts"></canvas>
          </div>
        </div>
      </div>
    </div>
    <!-- End of chart section -->
    <!-- Begin of cashflow by category -->
    <div class="col-sm-6">
      <div class="card shadow my-4">
        <div class="card-body">
          <h4>Cashflow By Category</h4>
          <div class="card">
            <div class="card-body p-3">
              <div class="d-flex justify-content-between align-items-center mb-2">
                <div>
                    <button id="pdfCategory" class="btn btn-info">PDF</button>
                </div>
                <div>
                  <select id="categoryFilter" class="form-select" onchange="">
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option>
                  </select>
                </div>
              </div>

              <table id="cashFlowByCategory" class="table table-striped table-bordered my-3" style="width:100%">
                <thead>
                  <tr>
                    <th>No</th>
                    <th>Date</th>
                    <th>Details</th>
                    <th>Kategori</th>
                    <th>Nominal</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Data will be generated by datatables with ajax -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- End of cashflow by category -->
    <!-- Begin of Detail CashFlow -->
    <div class="col-sm-12">
      <div class="card shadow my-4">
        <div class="card-body">
          <h4>Detail Cashflow</h4>
          <div class="card">
            <div class="card-body p-3">
              <div class="d-flex justify-content-between align-items-center mb-2">
                <div>
                    <button id="pdfDetail" class="btn btn-info">PDF</button>
                </div>
                <div class="d-flex justify-content-between">
                  <select id="detailFilter" class="form-select me-2" onchange="">
                    <option value="monthly">Monthly</option>
                    <option value="yearly">Yearly</option>
                  </select>
                  <input type="search" name="search" class="form-control" placeholder="Search...">
                </div>
              </div>

              <table id="detailCashFlow" class="table table-striped table-bordered my-3" style="width:100%">
                <thead>
                  <tr>
                    <th>No</th>
                    <th>Tanggal</th>
                    <th>Tipe</th>
                    <th>Keterangan</th>
                    <th>Nominal</th>
                    <th>Kategori</th>
                  </tr>
                </thead>
                <tbody>
                  <!-- Data will be populated here dynamically -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- End of Detail CashFlow -->
  </div>
</div>


<script>
    $(document).ready(function() {
      // begin of all datatables
      CashFlowCategory = $('#cashFlowByCategory').DataTable({
        ajax: {
          "url": "config/dashboard/fetch_by_category.php", // Replace with the path to your PHP script
          "dataSrc": ""
        },
        columns: [
          { 
            "data": null, 
            "className": 'text-center',
            "render": function (data, type, row, meta) {
              return meta.row + 1; // Auto-generate row number
            }
          },
          { 
            "data": "date",
            "className": 'text-center'
          },
          { 
            "data": "detail",
            "className": 'text-center'
          },
          { 
            "data": "title",
            "className": 'text-center'
          },
          { 
            "data": "total",
            "className": 'text-center card-shadow'
          }
        ],
        lengthMenu : [3, 5, 10, 25, 50, 100],
        dom : 't<"d-flex justify-content-between"<"align-self-start"l><"text-center"i><"align-self-end"p>>',
        responsive: true,
        autoWidth: false,
        buttons : [
            {
                extend: 'pdfHtml5',
                text: 'Download PDF',
                orientation: 'portrait',
                pageSize: 'A4',
                title: function() {
                    // Get the selected filter value (monthly or yearly)
                    var filter = $('#detailFilter').val();
                    
                    // Fetch the date from the first row of data
                    var firstRowData = detailCashFlow.row(0).data();
                    var rawDate = firstRowData ? firstRowData.date : '';  // Get the date from the first row (default to empty string if no data)
                    
                    // If there is no date in the first row, return a default title
                    if (!rawDate) {
                        return '<?php echo $_SESSION['fullname']; ?>-No Data';
                    }

                    // Parse the date string to a JavaScript Date object
                    var dateObj = new Date(rawDate);
                    
                    // Format the date based on the filter type (monthly or yearly)
                    var formattedDate = '';
                    if (filter === 'monthly') {
                        var options = { month: 'short', year: 'numeric' }; // "Nov 2024" format
                        formattedDate = dateObj.toLocaleDateString('en-US', options); // Example: "Nov 2024"
                    } else if (filter === 'yearly') {
                        var year = dateObj.getFullYear(); // Get the year as "2024"
                        formattedDate = year;
                    }

                    // Combine session fullname and formatted date
                    var title = '<?php echo $_SESSION['fullname']; ?>' + '-' + formattedDate;
                    return title;
                },
                messageTop: 'Generated on: ' + new Date().toLocaleDateString() // Add date at the top of the PDF
            }
        ],
        createdRow: function(row, data, dataIndex) {
          if (data.type == 'income') {
            $(row).find('td').addClass('bg-success text-light');
          } else if (data.type == 'spend') {
            $(row).find('td').addClass('bg-danger text-light');
          }
        }
      });

      detailCashFlow = $('#detailCashFlow').DataTable({
        "ajax": {
          "url": "config/dashboard/fetch.php", // Replace with the path to your PHP script
          "dataSrc": ""
        },
        "columns": [
          { 
            "data": null, 
            "className": 'text-center',
            "render": function (data, type, row, meta) {
              return meta.row + 1; // Auto-generate row number
            }
          },
          { 
            "data": "date",
            "className": 'text-center'
          },
          { 
            "data": "type",
            "className": 'text-center'
          },
          { 
            "data": "detail",
            "className": 'text-center'
          },
          { 
            "data": "nominal",
            "className": 'text-center'
          },
          { 
            "data": "category",
            "className": 'text-center card-shadow'
          }
        ],
        "lengthMenu": [10, 25, 50, 100],
        "dom": 't<"d-flex justify-content-between"<"align-self-start"l><"text-center"i><"align-self-end"p>>',
        responsive: true,
        autoWidth: false,
        buttons : [
            {
                extend: 'pdfHtml5',
                text: 'Download PDF',
                orientation: 'portrait',
                pageSize: 'A4',
                title: function() {
                    // Get the selected filter value (monthly or yearly)
                    var filter = $('#detailFilter').val();
                    
                    // Fetch the date from the first row of data
                    var firstRowData = detailCashFlow.row(0).data();
                    var rawDate = firstRowData ? firstRowData.date : '';  // Get the date from the first row (default to empty string if no data)
                    
                    // If there is no date in the first row, return a default title
                    if (!rawDate) {
                        return '<?php echo $_SESSION['fullname']; ?>-No Data';
                    }

                    // Parse the date string to a JavaScript Date object
                    var dateObj = new Date(rawDate);
                    
                    // Format the date based on the filter type (monthly or yearly)
                    var formattedDate = '';
                    if (filter === 'monthly') {
                        var options = { month: 'short', year: 'numeric' }; // "Nov 2024" format
                        formattedDate = dateObj.toLocaleDateString('en-US', options); // Example: "Nov 2024"
                    } else if (filter === 'yearly') {
                        var year = dateObj.getFullYear(); // Get the year as "2024"
                        formattedDate = year;
                    }

                    // Combine session fullname and formatted date
                    var title = '<?php echo $_SESSION['fullname']; ?>' + '-' + formattedDate;
                    return title;
                },
                messageTop: 'Generated on: ' + new Date().toLocaleDateString() // Add date at the top of the PDF
            }
        ],
        "createdRow": function(row, data, dataIndex) {
          // Tambahkan class bg-success atau bg-danger pada row berdasarkan 'type'
          if (data.type == 'income') {
            $(row).find('td').addClass('bg-success text-light'); // Kolom 'type' (kolom ke-3) diberi kelas bg-success
          } else if (data.type == 'spend') {
            $(row).find('td').addClass('bg-danger text-light'); // Kolom 'type' (kolom ke-3) diberi kelas bg-danger
          }
        }
      });
      // end of all datatables

      function fetchDetailData(filter) {
        fetch(`config/dashboard/fetch.php?filter=${filter}`)  // Gantilah URL ini dengan endpoint PHP yang sesuai
          .then(response => response.json())
          .then(data => {
            // Update data pada DataTable
            detailCashFlow.clear();
            detailCashFlow.rows.add(data);  // Menambahkan data baru
            detailCashFlow.draw();  // Mengupdate tabel
          })
          .catch(error => {
            console.error('Error fetching detail data:', error);
          });
      }

      // Fungsi untuk fetch data berdasarkan filter untuk kategori
      function fetchCategoryData(filter) {
        fetch(`config/dashboard/fetch_by_category.php?filter=${filter}`)  // Gantilah URL ini dengan endpoint PHP yang sesuai
          .then(response => response.json())
          .then(data => {
            // Update data pada DataTable
            CashFlowCategory.clear();
            CashFlowCategory.rows.add(data);  // Menambahkan data baru
            CashFlowCategory.draw();  // Mengupdate tabel
          })
          .catch(error => {
            console.error('Error fetching category data:', error);
          });
      }

      // Menangani perubahan filter detailCashFlow
      $('#detailFilter').on('change', function() {
        const filter = $(this).val(); // Ambil nilai filter yang dipilih (monthly/yearly)
        fetchDetailData(filter);  // Update data berdasarkan filter
      });

      $('#pdfDetail').on('click', function() {
        $('#detailCashFlow').DataTable().button('.buttons-pdf').trigger();
      });
      
      $('input[type="search"]').on('keyup change', function() {
        detailCashFlow.search(this.value).draw();
      });

      // Menangani perubahan filter CashFlowCategory
      $('#categoryFilter').on('change', function() {
        const filter = $(this).val(); // Ambil nilai filter yang dipilih (monthly/yearly)
        fetchCategoryData(filter);  // Update data berdasarkan filter
      });

      $('#pdfCategory').on('click', function() {
        $('#cashFlowByCategory').DataTable().button('.buttons-pdf').trigger();
      });

      // Inisialisasi dengan filter default 'monthly'
      fetchDetailData('monthly');
      fetchCategoryData('monthly');
    });

    // charts
    const chartObj = document.getElementById('charts').getContext('2d');

    // Initialize empty chart
    const charts = new Chart(chartObj, {
        type: 'bar',
        data: {
            labels: [],
            datasets: [
                {
                    label: 'Income',
                    data: [],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 2
                },
                {
                    label: 'Spending',
                    data: [],
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 2
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: { beginAtZero: true }
            }
        }
    });

    // Function to fetch data from the server based on selected filter
    function fetchChartData(filter) {
        fetch(`config/dashboard/fetch_chart.php?filter=${filter}`)
            .then(response => response.json())
            .then(data => {
                // Update the chart with new data
                charts.data.labels = data.labels;
                charts.data.datasets[0].data = data.incomeData;
                charts.data.datasets[1].data = data.expenseData;
                charts.update(); // Update chart with the new data
            })
            .catch(error => {
                console.error('Error fetching chart data:', error);
            });
    }

    // Function to update chart based on filter
    function updateChartData() {
        const filter = document.getElementById('chartFilter').value;
        fetchChartData(filter);
    }

    // Initial load for the daily data
    fetchChartData('daily');
</script>

<?php include 'footer.php'; ?>
